Program([ClassDecl(Id(Grade),[MethodDecl(Id(grading),Instance,[],Block([VarDecl(Id(i),IntType),VarDecl(Id(mark),FloatType),VarDecl(Id(sum),FloatType),VarDecl(Id(avg),FloatType),AssignStmt(Id(sum),IntLit(0)),Call(Id(console),Id(log),[StringLit(Enter Marks obtained in 5 Subjects: )]),For(Id(i),IntLit(0),IntLit(5),IntLit(1),Block([Call(Id(std),Id(cin),[Id(mark)]),AssignStmt(Id(sum),BinaryOp(+,Id(sum),Id(mark)))])]),AssignStmt(Id(avg),BinaryOp(/,Id(sum),IntLit(5))),Call(Id(std),Id(cout),[StringLit(\nGrade = )]),If(BinaryOp(&&,BinaryOp(>=,Id(avg),IntLit(91)),BinaryOp(<=,Id(avg),IntLit(100))),Block([Call(Id(std),Id(cout),[StringLit(A1)])]),If(BinaryOp(&&,BinaryOp(>=,Id(avg),IntLit(81)),BinaryOp(<,Id(avg),IntLit(91))),Block([Call(Id(std),Id(cout),[StringLit(A2)])]),If(BinaryOp(&&,BinaryOp(>=,Id(avg),IntLit(71)),BinaryOp(<,Id(avg),IntLit(81))),Block([Call(Id(std),Id(cout),[StringLit(B1)])]),If(BinaryOp(&&,BinaryOp(>=,Id(avg),IntLit(61)),BinaryOp(<,Id(avg),IntLit(71))),Block([Call(Id(std),Id(cout),[StringLit(B2)])]),If(BinaryOp(&&,BinaryOp(>=,Id(avg),IntLit(51)),BinaryOp(<,Id(avg),IntLit(61))),Block([Call(Id(std),Id(cout),[StringLit(C1)])]),If(BinaryOp(&&,BinaryOp(>=,Id(avg),IntLit(41)),BinaryOp(<,Id(avg),IntLit(51))),Block([Call(Id(std),Id(cout),[StringLit(C2)])]),If(BinaryOp(&&,BinaryOp(>=,Id(avg),IntLit(33)),BinaryOp(<,Id(avg),IntLit(41))),Block([Call(Id(std),Id(cout),[StringLit(D)])]),If(BinaryOp(&&,BinaryOp(>=,Id(avg),IntLit(21)),BinaryOp(<,Id(avg),IntLit(33))),Block([Call(Id(std),Id(cout),[StringLit(E1)])]),If(BinaryOp(&&,BinaryOp(>=,Id(avg),IntLit(0)),BinaryOp(<,Id(avg),IntLit(21))),Block([Call(Id(std),Id(cout),[StringLit(E2)])]),Block([Call(Id(std),Id(cout),[StringLit(Invalid!)])]))))))))))]))])])